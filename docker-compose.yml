version: '3.8'

services:
  # PostgreSQL 17 Database
  postgres:
    image: postgres:17-alpine
    container_name: firma_contratos_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-firma_contratos}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-firma_contratos}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  # FastAPI Application
  app:
    build: .
    container_name: firma_contratos_app
    environment:
      # Database URL for Dokploy
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/${POSTGRES_DB:-firma_contratos}
      
      # App configuration
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    volumes:
      - app_storage:/app/storage
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  app_storage:
    driver: local

networks:
  app-network:
    driver: bridge